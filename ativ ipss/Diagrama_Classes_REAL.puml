@startuml CheckNow_Classes_Real
title Diagrama de Classes - CheckNow v2.8.1\n85% Conformidade LGPD Implementada

skinparam defaultFontSize 10
skinparam classAttributeFontSize 9
skinparam nodesep 80
skinparam ranksep 100
skinparam packageStyle rectangle

left to right direction

package "Banco de Dados" {
class Profiles {
  - id: UUID
  - email: TEXT
  - is_premium: BOOLEAN
  - is_admin: BOOLEAN
  - onboarding_completed: BOOLEAN
  --
  + readOwnProfile()
  + updateOwnProfile()
  + upgradeToPremium()
  --
  <<RLS: Own Data Only>>
}

class Verifications {
  - id: UUID
  - user_id: UUID
  - news_content: TEXT
  - verification_status: TEXT
  - verification_summary: TEXT
  - verified_at: TIMESTAMPTZ
  --
  + insertVerification()
  + loadHistory()
  --
  <<RLS: Public Read, Own Write>>
}

}

package "Contextos React" {
class AuthContext {
  - user: Profiles
  - isLoading: BOOLEAN
  --
  + login()
  + register()
  + logout()
}

class VerificationContext {
  - verifications: NewsVerification[]
  - verificationCount: INTEGER
  - showAd: BOOLEAN
  --
  + verifyNews()
  + loadHistory()
}

class ConsentContext {
  - consents: ConsentRecord[]
  - hasRequiredConsents: BOOLEAN
  --
  + loadConsents()
  + grantConsent()
}
}

package "Serviços Externos" {
class SupabaseAuth {
  + signIn()
  + signUp()
  + signOut()
}

class GeminiAI {
  - model: "gemini-2.5-flash"
  --
  + analyzeNews()
}

class BraveSearchAPI {
  + getContext()
}

class WebScraperService {
  + extractContent()
}
}



' Relacionamentos implementados
Profiles ||--o{ Verifications : user_id
AuthContext --> Profiles : manages
VerificationContext --> Verifications : manages
AuthContext --> SupabaseAuth : uses
VerificationContext --> GeminiAI : uses
VerificationContext --> BraveSearchAPI : uses
VerificationContext --> WebScraperService : uses
class VerificationCache {
  - id: UUID
  - content_hash: TEXT
  - verification_data: JSONB
  - expires_at: TIMESTAMPTZ
  - hit_count: INTEGER
  --
  + getCached()
  + isExpired()
  --
  <<Cache: -70% API Calls>>
}

class ConsentRecords {
  - id: UUID
  - user_id: UUID
  - purpose: TEXT
  - granted: BOOLEAN
  - granted_at: TIMESTAMPTZ
  - ip_address: INET
  --
  + grantConsent()
  + revokeConsent()
  --
  <<LGPD Art. 7º>>
}


package "Componentes LGPD" {
class DataRightsScreen {
  - userData: UserData
  --
  + exportData()
  + deleteAccount()
}

class ConsentModal {
  - visible: BOOLEAN
  --
  + toggleConsent()
  + handleComplete()
}

class PDFExporter {
  + exportToPDF()
  + generateReport()
}
}

' Relacionamentos LGPD
Profiles ||--o{ ConsentRecords : user_id
ConsentContext --> ConsentRecords : manages
DataRightsScreen --> Profiles : exports
ConsentModal --> ConsentContext : uses
PDFExporter --> Profiles : exports
AuthContext --> ConsentModal : triggers
AuthContext --> ConsentContext : integrates
Verifications ||--o| VerificationCache : cached_by
VerificationContext --> VerificationCache : uses

note top of ConsentRecords : LGPD Art. 7º
note bottom of DataRightsScreen : LGPD Art. 18º
note right of VerificationCache : Cache -70% APIs

' 3. Estilo visual
skinparam note {
  BackgroundColor #F9F9F9
  BorderColor #000000
  FontSize 8
  MaxWidth 80
}

skinparam class {
  BackgroundColor #FFFFFF
  BorderColor #333333
  BorderThickness 1
}

skinparam package {
  BackgroundColor #E8F4FD
  BorderColor #2E86AB
  FontStyle bold
  FontSize 11
}

@enduml
